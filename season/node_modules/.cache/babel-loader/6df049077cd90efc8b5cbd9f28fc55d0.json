{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\React\\\\season\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\React\\\\season\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\React\\\\season\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\React\\\\season\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\React\\\\season\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\React\\\\season\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Season from './season';\n/*const APP = () => {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        (position) => console.log(position),\r\n        (err) => console.log(err)\r\n    );\r\n    return <div>Latitude</div>\r\n}*/\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        return _this2.setState({\n          lat: position.coords.latitude\n        });\n      }, function (err) {\n        return _this2.setState({\n          errorMessage: err.message\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('My component was just Updated and rerendered!');\n    } //React Says we have to define render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorMessage && !this.state.render) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \" Error :\", this.state.errorMessage);\n      }\n\n      if (!this.state.errorMessage && this.state.lat) {\n        return React.createElement(Season, {\n          lat: this.state.lat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading!! \");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:\\React\\React\\season\\src\\index.js"],"names":["React","ReactDOM","Season","App","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","console","log","render","Component","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAIA;;;;;;;;IASMC,G;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,K;;;;;;wCAGY;AAAA;;AAChBC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CAEI,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,SAAd,CAAJ;AAAA,OAFZ,EAII,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAES,GAAG,CAACC;AAApB,SAAd,CAAJ;AAAA,OAJP;AAMH;;;yCAGoB;AAEjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACH,K,CAGD;;;;6BAES;AAEL,UAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWe,MAA3C,EAAmD;AAC/C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKf,KAAL,CAAWE,YAAzB,CAAP;AAEH;;AAED,UAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,eAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAEH;;;;EApCaL,KAAK,CAACoB,S;;AAuCxBnB,QAAQ,CAACkB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Season from './season';\r\n\r\n\r\n\r\n/*const APP = () => {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        (position) => console.log(position),\r\n        (err) => console.log(err)\r\n    );\r\n    return <div>Latitude</div>\r\n}*/\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { lat: null, errorMessage: '' };\r\n\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n\r\n            position => this.setState({ lat: position.coords.latitude }),\r\n\r\n            err => this.setState({ errorMessage: err.message })\r\n        );\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n\r\n        console.log('My component was just Updated and rerendered!');\r\n    }\r\n\r\n\r\n    //React Says we have to define render\r\n\r\n    render() {\r\n\r\n        if (this.state.errorMessage && !this.state.render) {\r\n            return <div> Error :{this.state.errorMessage}</div>\r\n\r\n        }\r\n\r\n        if (!this.state.errorMessage && this.state.lat) {\r\n            return <Season lat={this.state.lat} />\r\n        }\r\n\r\n        return <div>Loading!! </div>\r\n\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}